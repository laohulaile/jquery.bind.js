// Generated by CoffeeScript 1.8.0
(function() {
  $(function() {
    var $window, body, click, mouseout, mouseover, scroll;
    body = $("body");
    click = "click";
    mouseover = "mouseover";
    mouseout = "mouseout";
    scroll = "scroll";
    $window = $(window);
    (function() {
      return body.on(click, "[bind-gotop]", function() {
        return $("body, html").stop().animate({
          scrollTop: 0
        }, 500);
      });
    })();
    (function() {
      return body.on(mouseover, "[bind-hover]", function() {
        return $(this).addClass("bind-hover");
      }).on(mouseout, "[bind-hover]", function() {
        return $(this).removeClass("bind-hover");
      });
    })();
    (function() {
      var actit, actnv, show;
      actit = "bind-tab-tit-active";
      actnv = "bind-tab-nav-active";
      body.on(click, "[bind-tab-tit]", function() {
        var my, parent;
        my = $(this);
        parent = my.parents("[bind-tab]");
        return show(my, parent);
      }).on(mouseover, "[bind-tab-tit]", function() {
        var my, parent, type;
        my = $(this);
        parent = my.parents("[bind-tab]");
        type = parent.attr("bind-tab");
        if (type === "mouseover" || type === "hover") {
          return show(my, parent);
        }
      });
      return show = function(my, parent) {
        var index, tits;
        tits = parent.find("[bind-tab-tit]");
        tits.removeClass(actit);
        my.addClass(actit);
        index = tits.index(my);
        return parent.find("[bind-tab-nav]").removeClass(actnv).hide().eq(index).addClass(actnv).show();
      };
    })();
    (function() {
      return $("[bind-banner]").each(function() {
        var block, direction, dot, dotClass, fn, func, index, left, length, move, my, right, width, wrap;
        my = $(this);
        wrap = my.find("[bind-banner-wrap]");
        block = my.find("[bind-banner-block]");
        dot = my.find("[bind-banner-dot]");
        dotClass = "bind-banner-dot-act";
        left = my.find("[bind-banner-left]");
        right = my.find("[bind-banner-right]");
        width = my.width();
        length = block.length;
        block.width(width);
        if (length === 1) {
          dot.hide();
          left.hide();
          right.hide();
          return false;
        }
        wrap.width(width * length * 2);
        block.clone().appendTo(wrap);
        index = 0;
        direction = "left";
        dot.eq(0).addClass(dotClass);
        move = function() {
          if (index === (length * 2)) {
            index = length;
            wrap.css("left", -width * (length - 1));
          }
          if (index < 0) {
            index = length - 1;
            wrap.css("left", -width * length);
          }
          console.log;
          dot.eq(index % length).addClass(dotClass).siblings().removeClass(dotClass);
          return wrap.stop().animate({
            left: -width * index
          });
        };
        func = function() {
          if (direction === "left") {
            index++;
          } else {
            index--;
          }
          return move();
        };
        fn = setInterval(function() {
          return func();
        }, 2000);
        right.on("click", function() {
          index++;
          direction = "left";
          return move(index);
        });
        left.on("click", function() {
          index--;
          direction = "right";
          return move(index);
        });
        my.hover(function() {
          return clearInterval(fn);
        }, function() {
          return fn = setInterval(function() {
            return func();
          }, 2000);
        });
        return dot.on("click", function() {
          index = $(this).index();
          return move();
        });
      });
    })();
    (function() {
      var attr, fixBox, fixT, reference, test;
      fixBox = $("[bind-fix]");
      attr = fixBox.attr("bind-fix");
      test = /^[1-9]\d*$/.test(attr);
      if (test) {
        fixT = attr;
      } else {
        reference = $("#" + attr);
        if (reference.length > 0) {
          fixT = reference.offset().top;
        }
      }
      return $window.on(scroll, function() {
        var t;
        t = $window.scrollTop();
        if (t > fixT) {
          return fixBox.addClass("bind-fix");
        } else {
          return fixBox.removeClass("bind-fix");
        }
      });
    })();
    return (function() {
      var mask;
      mask = $("[bind-pop-mask]");
      return body.on(click, "[bind-pop-btn]", function() {
        var num;
        mask.show();
        num = $(this).attr("bind-pop-btn");
        return $("[bind-pop-box=" + num + "]").show();
      }).on(click, "[bind-pop-close]", function() {
        var num;
        mask.hide();
        num = $(this).attr("bind-pop-close");
        return $("[bind-pop-box=" + num + "]").hide();
      });
    })();
  });

  return;

}).call(this);
